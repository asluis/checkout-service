package com.example.CheckoutService.api.controller;

import com.example.CheckoutService.api.model.History;
import com.example.CheckoutService.api.service.HistoryRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Sort;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.Collection;
import java.util.HashMap;
import java.util.Optional;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/history") // This means URL's start with /history (after Application path)
public class HistoryController{

    // This means to get the bean called userRepository. This is auto-generated by springâ€”it handles all the data
    @Autowired
    private HistoryRepository histRepo;

    @GetMapping(path = "/get")
    public @ResponseBody History getHist(@RequestParam int id){
        // @ResponseBody means the returned String is the response, not a view name
        // @ReqestParam means it is a parameter from the GET or POST request

        History x = histRepo.findById(id).get();

        return x;
    }

    @PostMapping(path="/create")
    public @ResponseBody HashMap<String, String> createHist(@RequestParam String buyerID, @RequestParam String sellerID,
                                                            @RequestParam String title, @RequestParam int listingID,
                                                            @RequestParam float price){

        History temp = new History();
        temp.setBuyerID(buyerID);
        temp.setListingID(listingID);
        temp.setSellerID(sellerID);
        temp.setListingPrice(price);
        temp.setListingTitle(title);

        histRepo.save(temp);

        HashMap<String, String> status = new HashMap<>();
        status.put("status", "success");

        return status;
    }

}